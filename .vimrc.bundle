"  .o8                                     .o8  oooo            
"  888                                     888  `888            
"  888oooo.  oooo  oooo  ooo. .oo.    .oooo888   888   .ooooo.  
"  d88' `88b `888  `888  `888P"Y88b  d88' `888   888  d88' `88b 
"  888   888  888   888   888   888  888   888   888  888ooo888 
"  888   888  888   888   888   888  888   888   888  888    .o 
"  `Y8bod8P'  `V88V"V8P' o888o o888o `Y8bod88P" o888o `Y8bod8P' 
"                                                               
"                                                               

let s:noplugin = 0

if g:is_windows
	let s:bundle_root = expand('$HOME/AppData/Roaming/vim/bundle')
else
	let s:bundle_root = expand('~/.vim/bundle')
endif
let s:neobundle_root = s:bundle_root . '/neobundle.vim'

if isdirectory(s:neobundle_root)
	set nocompatible
	filetype plugin indent off
	
	if has('vim_starting')
	set runtimepath+=~/.vim/bundle/neobundle.vim
	call neobundle#rc(expand('~/.vim/bundle'))
	endif 
	
	NeoBundleFetch 'Shougo/neobundle.vim'
	
	NeoBundle 'Shougo/unite.vim'
	NeoBundle 'b4b4r07/mru.vim'
	NeoBundle 'thinca/vim-splash'
	NeoBundle 'osyo-manga/vim-anzu'
	NeoBundle 'nanotech/jellybeans.vim'
	NeoBundle has('lua') ? 'Shougo/neocomplete' : 'Shougo/neocomplcache'

	if !has("gui_running")
		NeoBundle 'vim-scripts/buftabs'
	endif
	
	filetype plugin indent on
	NeoBundleCheck

	let g:plugin_vimrc = expand('~/.vimrc.plugin')
	if filereadable(g:plugin_vimrc)
		execute 'source ' . g:plugin_vimrc
	endif
else
	""let s:noplugin = 1
	command! NeoBundleInit call s:neobundle_init()
		function! s:neobundle_init()
			call mkdir(s:bundle_root, 'p')
			execute 'cd' s:bundle_root
			call system('git clone git://github.com/Shougo/neobundle.vim')
			execute 'set runtimepath+=' . s:bundle_root . '/neobundle.vim'
			call neobundle#rc(s:bundle_root)
			NeoBundle 'Shougo/unite.vim'
			NeoBundle 'Shougo/vimproc', { 'build': { 'unix': 'make -f make_unix.mak', }, }
			NeoBundleInstall
			echo "Finish!"
	  	endfunction
endif
