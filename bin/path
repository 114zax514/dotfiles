#!/bin/bash
#
# @(#) path ver.0.1 2014.12.02
#
# Usage:
#   path file...
# Description:
#   Get the absolute(full) pathname.
#
# Copyright (C) 2013-2014 b4b4r07, aka BABAROT
#               <b4b4r07@gmail.com>
#               <https://github.com/b4b4r07>
#
# License:
#   GNU General Public License version 3
#
######################################################################

function abs_path()
{
    if [ -z "$1" ]; then
        echo "too few arguments" 1>&2
        return 1
    fi

    if [ `expr x"$1" : x'/'` -ne 0 ]; then
        local rel="$1"
    else
        local rel="$PWD/$1"
    fi

    local abs="/"
    local _IFS="$IFS"; IFS='/'

    for comp in $rel; do
        case "$comp" in
            '.' | '')
                continue
                ;;
            '..')
                abs=`dirname "$abs"`
                ;;
            *)
                [ "$abs" = "/" ] && abs="/$comp" || abs="$abs/$comp"
                ;;
        esac
    done
    IFS="$_IFS"

    echo "$abs"
    return 0
}

function rel_path()
{
    if [ -z "$1" ]; then
        echo 'too few arguments' 1>&2
        return 1
    fi

    if [ `expr x"$1" : x'/'` -eq 0 ]; then
        echo "$1: not an absolute path" 1>&2
        return 1
    fi

    local org=`expr x"$PWD" : x'/\(.*\)'`
    local abs=`expr x"$1"   : x'/\(.*\)'`
    local rel="."
    local org1=""
    local abs1=""

    while true; do
        org1=`expr x"$org" : x'\([^/]*\)'`
        abs1=`expr x"$abs" : x'\([^/]*\)'`

        [ "$org1" != "$abs1" ] && break

        org=`expr x"$org" : x'[^/]*/\(.*\)'`
        abs=`expr x"$abs" : x'[^/]*/\(.*\)'`
    done

    if [ -n "$org" ]; then
        local _IFS="$IFS"; IFS='/'
        for c in $org; do
            rel="$rel/.."
        done
        IFS="$_IFS"
    fi

    if [ -n "$abs" ]; then
        rel="$rel/$abs"
    fi

    rel=`expr x"$rel" : x'\./\(.*\)'`
    echo "$rel"
    return 0
}


function get_path()
{
    local -a args
    [[ -z "$1" ]] && args+=(".")
    while (( $# > 0 ))
    do
        case "$1" in
            -*)
                if [[ "$1" == '-h' ]]; then
                    echo "$(usage: basename $0 [-h|-ar] path...)"
                    echo "  -a: Get absolute path(default)"
                    echo "  -r: Get relative path"
                    return 0
                fi
                if [[ "$1" == '-a' ]]; then
                    local option_a='true'
                    shift
                fi
                if [[ "$1" == '-r' ]]; then
                    local option_r='true'
                    shift
                fi
                ;;
            *)
                args+=("$1")
                shift
                ;;
        esac
    done
    
    if [[ "$option_r" == 'true' ]]; then
        rel_path "$args"
    else
        abs_path "$args"
    fi
}

if [[ $OSTYPE == darwin* ]]; then
    get_path "$@" | (tee /dev/fd/3 | tr -d "\n" | pbcopy) 3>&1
else
    get_path "$@"
fi
