#!/bin/bash

set -e
set -u

cat <<-'EOT'

    | |     | |  / _(_) |           
  __| | ___ | |_| |_ _| | ___  ___  
 / _` |/ _ \| __|  _| | |/ _ \/ __| 
| (_| | (_) | |_| | | | |  __/\__ \ 
 \__,_|\___/ \__|_| |_|_|\___||___/ 

*** WHAT'S INSIDE? ***
  1. Download https://github.com/b4b4r07/dotfiles
  2. make deploy
  3. (Optional) make install

See the README for documentation.
https://github.com/b4b4r07/dotfiles

Copyright (c) 2014 "BABAROT" aka @b4b4r07
Licensed under the MIT license.

EOT

if [[ "$0" =~ $(basename "${BASH_SOURCE:-}") ]]; then
    echo "That this file is started directly is not recommended" 1>&2
    exit 1
fi

# Where the magic happens.
export DOTFILES=~/.dotfiles

# Logging stuff.
function e_newline() { echo -e "\n"; }
function e_header()  { echo -e "\n\033[1m$*\033[0m"; }
function e_success() { echo -e " \033[1;32m✔\033[0m  $*"; }
function e_error()   { echo -e " \033[1;31m✖\033[0m  $*"; }
function e_arrow()   { echo -e " \033[1;34m➜\033[0m  $*"; }

# Booleans
function is_exist()  { type "$1" >/dev/null 2>&1; return $?; }

function make_install()
{
    local file
    local files=($DOTFILES/etc/init/{osx/,}*.sh)
    # No files? abort.
    if (( ${#files[@]} == 0 )); then return; fi
    for file in "${files[@]}"; do
        e_arrow "$file: running..."
        bash "$file"
        e_success "done"
    done
}

function dotfiles()
{
    if [ -d "$DOTFILES" ]; then
        cd $DOTFILES
        make update
    else
        e_header 'Downloading dotfiles...'
        if is_exist 'git'; then
            # --recursive equals to ...
            # git submodule init
            # git submodule update
            git clone --recursive https://github.com/b4b4r07/dotfiles.git $DOTFILES
        else
            cd /tmp
            curl -fsSL -o dotfiles.zip https://github.com/b4b4r07/dotfiles/archive/master.zip
            unzip -oq dotfiles.zip
            mv dotfiles-master $DOTFILES
        fi
        e_success 'Done'

        cd $DOTFILES
        e_header 'Deploying dotfiles...'
        make deploy
        e_success 'Done'

        if [[ "${1:-}" == "install" ]]; then
            e_header 'Installing...'
            e_newline
            #make install
            make_install
        fi

        exec "${SHELL:-/bin/zsh}"
    fi
}

dotfiles "$@"
e_success 'All done'
