#!/bin/bash

# readlink emulates GNU readlink -f option
readlink() {
    if [ $# -eq 0 ] ; then
        return 1
    fi

    # change directory and reset file
    file="$1"
    cd "$(dirname "$file")"
    file="$(basename "$file")"

    # recursively
    while [ -L "$file" ]; do
        # read link
        file="$(command readlink "$file")"
        cd "$(dirname "$file")"
        file="$(basename "$file")"
    done

    # real pwd
    phys="$(pwd -P)"
    result="$phys/$file"

    # puts
    echo "$result"
}

# get dotpath as full path
dotpath="$(dirname "$(readlink "$0")")"

# check if the current shell is run with the interactive mode
if echo "$-" | grep -q "i"; then
    # -> source a.sh
    DOTPATH="$dotpath"
    export DOTPATH
else
    # puts
    if [ "$0" = "${BASH_SOURCE:-}" ]; then
        # -> bash a.sh
        echo "$dotpath"
    fi
fi

# alias to cd dotpath
dot() {
    # Initialize with dotpath
    : "${DOTPATH:=$dotpath}"

    # exit status
    local s

    case "$1" in
        "-h"|"--help")
            echo "usage: dot [OPTION] [path]" 1>&2
            echo "  dot is alias to cd \$DOTPATH" 1>&2
            echo "" 1>&2
            echo "OPTION:" 1>&2
            echo "  -h, --help      show this help message" 1>&2
            echo "  -c, --clean     clean up dot files and dotfiles" 1>&2
            echo "  -p, --path      show \$DOTPATH" 1>&2
            return
            ;;
        "-c"|"--clean")
            make --file="${DOTPATH:?not set}"/Makefile clean
            return $?
            ;;
        "-p"|"--path")
            echo "${DOTPATH:?not set}"
            return $?
            ;;
        -*|--*)
            echo "$1: unknown option"
            return 1
            ;;
        *)
            if [ -d "$DOTPATH/$1" ]; then
                builtin cd "$DOTPATH/$1"
                s=$?
            else
                builtin cd "$DOTPATH"
                s=$?
            fi
            return $s
            ;;
    esac
}
