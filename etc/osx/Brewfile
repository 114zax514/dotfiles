#!/bin/bash
# vim: ft=sh

set -u
set -e

if ! type brew >/dev/null 2>&1; then
    echo 'brew: command not found' 1>&2
    echo -n "Install now? (y/N/) "
    read
    if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" == '' ]]; then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        if [ $? -eq 0 ]; then
            echo "Complete!"
            return 0
        fi
        return 1
    fi
fi

echo "brew updating..."

brew update
outdated=$(brew outdated)

if [ -n "$outdated" ]; then
    echo 'The following package(s) will upgrade.'
    echo ''
    echo "$outdated"
    echo 'Are you sure?'
    echo 'If you do not want to upgrade, please type Ctrl-c now.'
    echo ''

    # Wait Ctrl-c
    read dummy

    brew upgrade
fi

declare -a BREW_PACKAGES=(
  "ack"
  "autoconf"
  "bdw-gc"
  "caskroom/cask/brew-cask"
  "cmigemo"
  "cowsay"
  "cscope"
  "figlet"
  "freetype"
  "ghostscript"
  "git"
  "go"
  "groff"
  "hub"
  "imagemagick"
  "jbig2dec"
  "jpeg"
  "libevent"
  "libpng"
  "libtiff"
  "libtool"
  "little-cms2"
  "openssl"
  "pcre"
  "peco/peco/peco"
  "pkg-config"
  "rbenv"
  "reattach-to-user-namespace"
  "ruby-build"
  "terminal-notifier"
  "the_silver_searcher"
  "tig"
  "tmux"
  "tree"
  "vim"
  "w3m"
  "wget"
  "xz"
)

for package in "${BREW_PACKAGES[@]}"
do
    if brew list -1 | grep -q "^$(basename $package)"; then
        echo "Skip: brew install ${package}"
    else
        brew install $package
    fi
done
