# General {{{1
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh
set-option -s escape-time 0

set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

#source-file ~/session
#splitw -v -c '${pane_current_path}'

#http://blog.yagni.jp/archives/498
set-option -g allow-rename off

# Window and panes {{{1
## About window {{{2

# Start window index 1 origin
set -g base-index 1

# Split window
bind | split-window -h

# Vertical split window
bind - split-window -v

# System window by supported OS
set -g set-titles on
set -g set-titles-string "[tmux] #T @ #H"

# Select window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

## About panes {{{2

# Start pane index 1 origin
setw -g pane-base-index 1

# Resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Move pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Rotate movement pane
bind -n C-o select-pane -t :.+

# Key-bindings {{{1
bind r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"
bind C-r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"

bind-key g command-prompt -p "Google Translate en->ja:" "split-window 'source ~/.zshrc >/dev/null; gte %% | less'"
bind-key G command-prompt -p "Google Translate ja->en:" "split-window 'source ~/.zshrc >/dev/null; gtj %% | less'"
bind-key V command-prompt -p "Vim Help:" "split-window 'vim +\"help %%\"'"
bind-key m command-prompt -p "Man:" "split-window 'man %%'"
bind-key M command-prompt -p "Less:" "split-window 'which richpager && richpager -l %%'"

bind b break-pane
bind k kill-pane
bind i display-panes
#bind C-k display-panes\; kill-pane\;
#bind C-k display-panes\; confirm-before kill-pane\;
bind C-x run "tmux kill-pane || tmux kill-window"
bind C-t run "tmux last-pane || tmux last-window || tmux new-window"

# Appearance {{{1
set -g status-position top
set -g default-terminal "screen-256color"
set -g pane-active-border-bg colour235

## Statusline {{{2

# Length left
set -g status-left-length 90
set -g status-right-length 90

# Contents left
set -g status-left '#H:[#P]'

# Contents right
set -g status-right "#(tmux show-options -g prefix) [%Y-%m-%d(%a) %H:%M]"
#if "type battery.sh" "set -g status-right '#(tmux show-options -g prefix) #(battery.sh -t) [%Y-%m-%d(%a) %H:%M]'"
#if "which battery.sh" "set -g status-right '#(which get_ssid.sh >/dev/null && get_ssid.sh) #(battery.sh) [%Y-%m-%d(%a) %H:%M]'"

#set -g status-right '#(which get_ssid.sh >/dev/null && get_ssid.sh) #(which battery.sh >/dev/null && battery.sh -c tmux) [%Y-%m-%d(%a) %H:%M]'
set -g status-right '#(get_ssid) #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'

# Enable utf-8 on statusbar
set -g status-utf8 on

# Reload statusbar
set -g status-interval 1

# Centerize
set -g status-justify centre

# Enable visual notification
setw -g monitor-activity on

# Enable visual notification
set -g visual-activity on

# Enable statusbar top
set -g status-position top
#}}}

## Solarized {{{2

# Default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# Message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green
#}}}

# Enable clipboard
set-option -g default-command \
'which reattach-to-user-namespace >/dev/null 2>&1 && \
reattach-to-user-namespace -l bash || bash'

# Display time
set -g display-time 3500

# Copy-mode {{{1
setw -g mode-keys vi

bind C-v copy-mode \; display "Copy mode!"
bind v copy-mode
bind p paste-buffer
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind   -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy C-c cancel
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy C-a start-of-line
bind-key -t vi-copy C-e end-of-line
bind-key -t vi-copy w next-word
bind-key -t vi-copy e next-word-end
bind-key -t vi-copy b previous-word
bind-key -t vi-copy g top-line
bind-key -t vi-copy G bottom-line
bind-key -t vi-copy Space next-space
bind-key -t vi-copy / search-forward
bind-key -t vi-copy ? search-backward
#bind-key -t vi-copy C-u page-up
#bind-key -t vi-copy C-d page-down
bind-key -t vi-copy C-u scroll-up
bind-key -t vi-copy C-d scroll-down

bind-key -t vi-copy V copy-end-of-line
bind-key -t vi-copy Y copy-line

# Misc {{{1
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# vim:fdm=marker expandtab fdc=3 ft=conf ts=2 sw=2 sts=2:
