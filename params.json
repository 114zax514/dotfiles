{"name":"Dotfiles","tagline":"Testing my dotfiles repo on OS X to get my work environment ready in just a few moments. #VIM + #ZSH + #TMUX = Best Developer Environment","body":"# The [B4B4R07](https://twitter.com/b4b4r07)'s dotfiles\r\n\r\n[![Dotfiles Logo](http://cl.ly/image/2q1a2d0Y2S3y/dotfiles.png)](https://dribbble.com/shots/1466768-dotfiles-logo \"b4b4r07's dotfiles\")\r\n\r\n[![Build Status](https://travis-ci.org/b4b4r07/dotfiles.svg?branch=master)](https://travis-ci.org/b4b4r07/dotfiles \"Build Status\")\r\n[![License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](./doc/LICENSE-MIT.txt \"License\")\r\n[![Platform](https://img.shields.io/badge/platform-OS%20X-lightgrey.svg?style=flat)](./doc/OSX.md \"Platform\")\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/b4b4r07/dotfiles/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\nThis is a repository with my [configuration files](http://en.wikipedia.org/wiki/Configuration_file), those that in Linux/OS X normally are these files under the `$HOME` directory that are hidden and preceded by a dot, AKA **dotfiles**.\r\n\r\n## Overview\r\n\r\nThe primary goal is to increase CLI productivity on OS X, though many scripts run just fine on any POSIX implementation and it is easy to build environment again by running just the [installation command](#oneliner) of one-liner.\r\n\r\nMy primary OS is OS X (10.10.x) and some of these configurations are tuned to work on that platform. The bash files are more generic and friendly toward other Unix-based operating systems.\r\n\r\n## Features\r\n\r\n- **OS X** Yosemite (MacBook Air)\r\n- **Zsh** 5.0.5\r\n- **Vim** 7.4\r\n- **Tmux** 1.9a\r\n- **Terminal.app** (Full-screen)\r\n- **Solarized** ([base 16](https://github.com/chriskempson/base16))\r\n\r\n***DEMO:***\r\n\r\n![](./doc/img/environment.png \"b4b4r07's environment\")\r\n\r\n| Download ZIP |\r\n|:---:|\r\n| [![](./doc/img/download.png)](https://github.com/b4b4r07/dotfiles/archive/master.zip \"Download ZIP\") |\r\n\r\n<!--\r\n<table style=\"text-align:center; border:none;\">\r\n  <tr style=\"border:none;\">\r\n    <td style=\"border:none;\"><strong>Download ZIP</strong></td>\r\n  </tr>\r\n  <tr style=\"border:none;\">\r\n    <td style=\"border:none;\"><p><a href=\"https://github.com/b4b4r07/dotfiles/archive/master.zip\" title=\"Download ZIP\"><img src=\"./doc/img/download.png\" alt=\"\" /></a></p>\r\n</td>\r\n  </tr>\r\n</table>\r\n-->\r\n\r\n**Note:** You can clone or fork them freely, but I don't guarantee that they fit you.\r\n\r\n## Installation\r\n\r\nThe easiest way to install this dotfiles is to open up a terminal, type the installation command below:\r\nRun the following command to set up a new machine:\r\n\r\n| Tools | <a name=\"oneliner\">Installation command</a> |\r\n|-------|-------------------------------------------------|\r\n| cURL | bash -c \"$(curl -fsSL [dot.b4b4r07.com](https://raw.githubusercontent.com/b4b4r07/dotfiles/master/etc/install))\" |\r\n| Wget | bash -c \"$(wget -qO - [dot.b4b4r07.com](https://raw.githubusercontent.com/b4b4r07/dotfiles/master/etc/install))\" |\r\n\r\n- It is almost the same as the command below except for executing through a Web site directly.\r\n\r\n\t```console\r\n\t$ make install\r\n\t```\r\n\r\n\tIt is not necessary to perform `make install` at all if this repository was installed by the [installation command](#oneliner).\r\n\r\n- General download method using the `git` command:\r\n\r\n\t```console\r\n\t$ git clone https://github.com/b4b4r07/dotfiles.git ~/.dotfiles\r\n\t$ cd ~/.dotfiles && make install\r\n\t```\r\n\t\r\n\tIncidentally, `make install` will perform the following tasks.\r\n\t\r\n\t- `make update`; Updating dotfiles repository\r\n\t- `make deploy`; Deploying dot files\r\n\t- `make init`; Initializing some settings\r\n\r\n**What's inside?**\r\n\r\n1. Download this repository\r\n2. Deploy (i.e. *copy* or *create symlink*) dot files to your home directory; `make deploy`\r\n3. Run all programs for setup in `./etc/init/` directory; `make init` (**Optional**: when running the [installation command](#oneliner) specify `-s init` as an argument)\r\n\r\nWhen the [installation command](#oneliner) format is not `curl -L URL | sh` but `sh -c \"$(curl -L URL)\"`, shell will be restart automatically. If this is not the case, it is necessary to restart your shell manually.\r\n\r\n***DEMO:***\r\n\r\n![](./doc/img/installation.gif)\r\n\r\n### Quick installation\r\n\r\nTo quickly install:\r\n\r\n```console\r\n$ curl -sL dot.b4b4r07.com | sh\r\n```\r\n\r\nDifference of *Installation* and *Quick Installation* is that the latter one-liner is shorter than the former one (including typing the number of shift key). However, because when you install in the *Quick installation* shell is not re-boot, it is necessary to perform the `exec sh` yourself.\r\n\r\n<table style=\"border:none;\">\r\n  <tr style=\"border:none;\">\r\n    <td style=\"border:none;\"><strong>42 chars</strong></td>\r\n    <td style=\"border:none;\"><code>bash -c \"$(curl -sL dot.b4b4r07.com)\"</code></td>\r\n  </tr>\r\n  <tr style=\"border:none;\">\r\n    <td style=\"border:none;\"><strong>30 chars</strong></td>\r\n    <td style=\"border:none;\"><code>curl -sL dot.b4b4r07.com | sh</code></td>\r\n  </tr>\r\n</table>\r\n\r\nActually notation of the shell may be `sh` instead of `bash`. Regardless of the `sh` realities, it is possible to do the same installation process because the [script file](etc/install) that is used to the [installation command](#oneliner) is a shell script that conforms to POSIX.\r\n\r\n**Note:** If you want to use the [`curl`](http://curl.haxx.se), in order to follow the redirect `-L` flag is essential. On the other hand, it is possible to omit `-s` flag because it is meant that silent or quiet mode makes `curl` mute.\r\n\r\n## Updating\r\n\r\nTo update later on, just run this command.\r\n\r\n```console\r\n$ make update\r\n```\r\n\r\nIn addition, there are several git submodules included in this configuration. On a new installation these submodules need to be initialized and updated.\r\n\r\n## Setup\r\n\r\n### Initialize\r\n\r\nAll configuration files for setup is stored within the `etc/init/` directory. By running the command below, you can interactively setup all preferences.\r\n\r\n```console\r\n$ make init\r\n```\r\n\r\nTo run `make init` immediately after running the [installation command](#oneliner):\r\n\r\n```console\r\n$ bash -c \"$(curl -L dot.b4b4r07.com)\" -s init\r\n```\r\n\r\n**Init scripts**\r\n\r\n- [Build and install the original cutsom Vim](./etc/init/build_vim_by_myself.sh)\r\n- [Translate your home directory into English](./etc/init/globalize_your_home_directory.sh)\r\n- [Install antigen the zsh plugin manager](./etc/init/install_zsh_plugin_manager_antigen.sh)\r\n- [Install pygments the generic syntax highlighter written in python](./etc/init/install_pygments.sh)\r\n- [Install Homebrew the missing package manager for OS X](./etc/init/osx/install_homebrew.sh)\r\n- [Install the CLI tool that comes with Xcode](./etc/init/osx/install_xcode_cli_tools.sh)\r\n- [Run 'brew install' based on the Brewfile](./etc/init/osx/install_brew_packages.sh)\r\n- [Run 'brew cask install' based on the Caskfile](./etc/init/osx/install_cask_packages.sh)\r\n- [Sensible OS X defaults](./etc/init/osx/execute_osx_defaults.sh)\r\n- [Setup Karabiner (formerly KeyRemap4MacBook)](./etc/init/osx/setup_kanabiner.sh)\r\n- ...\r\n\r\nFor more information about initializing, see also [./etc/README.md](./etc/README.md).\r\n\r\n### Vim\r\n\r\nTo install the Vim plugins, run this command.\r\n\r\n```console\r\n$ vim +NeoBundleInit +qall\r\n```\r\n\r\nVim plugins are not installed from you just running the [installation command](#oneliner). To install the plugins, you must specify the `-c 'NeoBundleInit'` as an argument when starting Vim. By doing so, install immediately [neobundle.vim](https://github.com/Shougo/neobundle.vim) and other plugins (**requires**: `git` in `$PATH`, Vim 7.2+, a lot of time, Wi-Fi). \r\n\r\nTo use these plugins effectively, features of Vim needs **normal or [more](http://www.drchip.org/astronaut/vim/vimfeat.html)**.\r\n\r\n### Git\r\n\r\nMake the configuration file for personal use. Copy and paste the following to personal configuration file, e.g. `~/.sh.local`\r\n\r\n```bash\r\n# Git credentials\r\n# Not under version control to prevent people from\r\n# accidentally committing with your details\r\nGIT_AUTHOR_NAME=\"b4b4r07\"\r\nGIT_AUTHOR_EMAIL=\"b4b4r07@example.com\"\r\nGIT_COMMITTER_NAME=\"$GIT_AUTHOR_NAME\"\r\nGIT_COMMITTER_EMAIL=\"$GIT_AUTHOR_EMAIL\"\r\n\r\n# Set the credentials (modifies ~/.gitconfig)\r\ngit config --global user.name \"$GIT_AUTHOR_NAME\"\r\ngit config --global user.email \"$GIT_AUTHOR_EMAIL\"\r\n```\r\n\r\n### Zsh\r\n\r\nThe easiest way to change your shell is to use the `chsh` command. You can also give `chsh` the `-s` option; this will set your shell for you, without requiring you to enter an editor.\r\n\r\n```console\r\n$ chsh -s /bin/zsh\r\n```\r\n\r\n**Note:** The shell that you wish to use must be present in the `/etc/shells` file.\r\n\r\n### OS X\r\n\r\nWhen setting up a new Mac, you may want to perform the following tasks mainly.\r\n\r\n- Install the Xcode Command Line Tools\r\n\r\n\tYou need to have Xcode or, at the very minimum, the Xcode Command Line Tools, which are available as a much smaller download.\r\n\t\r\n\tThe easiest way to install the [Xcode Command Line Tools](https://developer.apple.com/downloads) in OSX 10.9+ is to open up a terminal, type `xcode-select --install` and follow the prompts.\r\n\r\n- Install Homebrew and setup their formulae\r\n\r\n\tSince OS X does not have a native package manager that you can use from the command line, [Brew](http://brew.sh) (also known as Homebrew), has filled in. \r\n\t\r\n\tAfter installing Homebrew, you may want to install some common Homebrew formulae:\r\n\t\r\n\t```console\r\n\t$ make brew\r\n\t$ make cask\r\n\t```\r\n\t\r\n- Run some `defaults` commands\r\n\r\n\tIt can set many hidden settings and preferences in Mac OS X, and in individual applications.\r\n\r\nAll of these are included in the `make init` for OS X. For more detail, see also [here](./doc/OSX.md) of documentation of OS X operation.\r\n\r\n## Components\r\n\r\nThe main directory that the user will use are the following list.\r\n\r\n- **bin/**: Anything in `bin/` will be added to your `$PATH` and be made available everywhere.\r\n- **etc/init/**: A storage of configuration files to be executed initially.\r\n- **etc/init/osx/**: Some configuration files for OS X are stored.\r\n- **etc/lib/**: Shell scripts Libraries.\r\n- **doc/man/**: A manual of my own making sctipts\r\n- **.loading/**: Any files ending in `.sh` get loaded into your environment.\r\n\r\n## Credits\r\n\r\nAcknowledgment; I established this dotfiles referring to the following user's repositories. Thus, I would appreciate it if you used my repository for reference. Thanks.\r\n\r\n* These dotfiles are heavily based on [@cowboy's dotfiles](https://github.com/cowboy/dotfiles/blob/master/bin/dotfiles)\r\n* Inspired by [@skwp's dotfiles](https://github.com/skwp/dotfiles)\r\n* *Installation* section based on [@larsyencken's marelle](https://github.com/larsyencken/marelle)\r\n* *Installation* section based on [@Cătălin's dotfiles](https://github.com/alrra/dotfiles)\r\n* *Git* section based on [@necolas's dotfiles](https://github.com/necolas/dotfiles)\r\n* *OS X* section based on [@cowboy's dotfiles](https://github.com/cowboy/dotfiles/blob/master/README.md)\r\n* *Components* section based on [@holman's dotfiles](https://github.com/holman/dotfiles)\r\n* *Author* section and [*OS X defaults*](etc/init/osx/osx_defaults.sh) based on [@Mathias's dotfiles](https://github.com/mathiasbynens/dotfiles)\r\n* My `README.md` layout based on [@zanshin's README.md](https://github.com/zanshin/dotfiles)\r\n* My `Makefile` based on [@Tetsuji's dotfiles](https://github.com/xtetsuji/dotfiles)\r\n* My `bootstrap.sh` based on [@Rocha's dotfiles](https://github.com/zenorocha/old-dotfiles)\r\n\r\n## Licence [![license](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](./doc/LICENSE-MIT.txt \"License\")\r\n\r\n[![b4b4r07](http://www.gravatar.com/avatar/8238c3c0be55b887aa9d6d59bfefa504.png)](https://twitter.com/intent/follow?screen_name=b4b4r07 \"Follow @b4b4r07 on Twitter\")\r\n\r\nCopyright (c) 2014 \"BABAROT\" b4b4r07\r\n\r\nLicensed under the [MIT license](./doc/LICENSE-MIT.txt).\r\n\r\nUnless attributed otherwise, everything is under the MIT licence. Some stuff is not from me, and without attribution, and I no longer remember where I got it from. I apologize for that.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}