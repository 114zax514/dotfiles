#!/bin/bash

. ~/.bash.d/lib/general.func
. ~/.bash.d/lib/variable.def

declare -a save

usage() {
	echo "Usage: $(basename $0) [OPTIONS] [FILES]"
	echo "  Get full(relative) path."
	echo
	echo "Options:"
	echo "  -h, --help     display this help"
	echo "  -p, --path2rel get relative path"
	echo
	exit 1
}

for OPT in "$@"
do
	case "$OPT" in
		'-h'|'--help' )
			usage
			exit 1
			;;
		'-p'|'--path2rel' )
			if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
				echo "$PROGNAME: option requires an argument -- $1"
				exit 1
			fi
			rel_path "$2"
			shift 2
			;;
		'--'|'-' )
			shift 1
			param+=( "$@" )
			break
			;;
		-*)
			echo "$PROGNAME: illegal option -- '$(echo $1 | sed 's/^-*//')'"
			exit 1
			;;
		*)
			if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
				param+=( "$1" )
				shift 1
			fi
			;;
	esac
done

if [ -z $param ]; then
	echo $(abs_path ".")
	save=$_
else
	for FILE in ${param[@]}; do
		[ ! -e $FILE ] && continue
		save+=( $(abs_path "$FILE") )
		echo ${save[${#save[@]}-1]}
	done
fi

if [[ $OS =~ "darwin" ]]; then
	for i in ${save[@]}; do
		echo $i
	done | pbcopy
fi
